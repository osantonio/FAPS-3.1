"""add_user_constraints

Revision ID: fd6d1d8f087a
Revises: c9aafdf42603
Create Date: 2025-01-09 13:52:52.437565

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'fd6d1d8f087a'
down_revision = 'c9aafdf42603'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('_alembic_tmp_delivery')
    with op.batch_alter_table('delivery', schema=None) as batch_op:
        batch_op.alter_column('supply_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('resident_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(255), nullable=True))
        batch_op.add_column(sa.Column('password', sa.String(255), nullable=True))
    
    # Actualizar registros existentes con valores por defecto
    op.execute("UPDATE user SET email = no_identification || '@temp.com', password = 'temp_password'")
    
    # Hacer las columnas no nulas despu√©s de actualizar los datos
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('email', nullable=False)
        batch_op.alter_column('password', nullable=False)
        batch_op.create_unique_constraint('uq_user_email', ['email'])
        batch_op.create_unique_constraint('uq_user_identification', ['no_identification'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_constraint('uq_user_identification', type_='unique')
        batch_op.drop_constraint('uq_user_email', type_='unique')
        batch_op.drop_column('password')
        batch_op.drop_column('email')

    with op.batch_alter_table('delivery', schema=None) as batch_op:
        batch_op.alter_column('resident_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('supply_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    op.create_table('_alembic_tmp_delivery',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('supply_id', sa.INTEGER(), nullable=False),
    sa.Column('resident_id', sa.INTEGER(), nullable=False),
    sa.Column('quantity', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.ForeignKeyConstraint(['resident_id'], ['resident.id'], ),
    sa.ForeignKeyConstraint(['supply_id'], ['supply.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
